version: "3"

volumes:
  node_data: {}

networks:
  node-net:
    external: true

services:
    client:
        image: node:12.10.0
        container_name: reactjs
        expose:
            - 3000
        environment:
            - REACT_APP_API_URL=http://localhost:5000/api
            - REACT_APP_SOCKET_URL=http://localhost:5000
        networks:
        - node-net
        restart: on-failure
        deploy:
          restart_policy:
            condition: on-failure
        ports:
            - 3000:3000
        volumes:
            - "./client/:/home/app/"
        depends_on:
        - server
        command: sh -c "cd /home/app && npm install --save && npm start"
        
    server:
        image: node:12.10.0-alpine
        container_name: nodejs
        expose:
            - 5000
        environment:
            - FOLDER_PATH=/home/app/files
            - DB_HOST=db
            - DB_USER=postgres
            - DB_PASS=123456
            - DB_DATABASE=distance_matrix
            - GOOGLE_MAPS_API_KEY=_____YOU_TOKEN_____
        networks:
        - node-net
        restart: on-failure
        deploy:
          restart_policy:
            condition: on-failure
        ports:
            - 5000:5000
        volumes:
            - "./server/:/home/app/"
        depends_on:
        - db
        links:
        - db
        command: sh -c "cd /home/app && npm install --save && npm run migrate && npm run start"

    db:
        image: postgres:alpine
        container_name: postgres
        networks:
        - node-net
        restart: on-failure
        deploy:
          restart_policy:
            condition: on-failure
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=123456
            - POSTGRES_DB=distance_matrix
        ports:
            - 5432:5432


